rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // User-specific access
    match /users/{userId} {
      // Allow users to access their own user document
      allow read, write: if request.auth != null && request.auth.uid == userId;

      // Allow users to access and manage their own listings
      match /listings/{listingId} {
        // A user can read their own listings
        allow read: if request.auth != null && request.auth.uid == userId;

        // A user can write or delete their own listings only if the owner.uid matches their UID
        allow write: if request.auth != null 
                     && request.auth.uid == userId 
                     && request.resource.data.owner.uid == userId;

        // Add delete condition: Users can delete their listings
        allow delete: if request.auth != null && request.auth.uid == userId;
      }

      // Allow users to manage their own bookings
      match /bookings/{bookingId} {
        // Users can read their own bookings
        allow read: if request.auth != null && request.auth.uid == userId;

        // Users can write bookings only for themselves
        allow write: if request.auth != null 
                     && request.auth.uid == userId 
                     && request.resource.data.car.owner.uid == userId;
      }
    }

    // Global listings access (using collectionGroup queries)
    match /{path=**}/listings/{listingId} {
      // Any authenticated user can read all listings globally
      allow read: if request.auth != null;

      // Write and delete operations require that the authenticated user is the owner
      allow write: if request.auth != null 
                   && request.resource.data.owner.uid == request.auth.uid;

      // Add delete condition: Global delete ability for the listing owner
      allow delete: if request.auth != null 
                    && request.auth.uid == request.resource.data.owner.uid;
    }
  }
}
